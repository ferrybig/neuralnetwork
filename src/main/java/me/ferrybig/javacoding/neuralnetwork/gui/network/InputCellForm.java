package me.ferrybig.javacoding.neuralnetwork.gui.network;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.beans.PropertyChangeEvent;
import me.ferrybig.javacoding.neuralnetwork.Cell;
import me.ferrybig.javacoding.neuralnetwork.gui.DoubleFormatterFactory;

/**
 *
 * @author Fernando
 */
public class InputCellForm extends javax.swing.JPanel {

	private final Cell cell;

	private final Runnable inputUpdate;

	/**
	 * Creates new form InputCellForm
	 * @param cell
	 * @param inputUpdate
	 */
	public InputCellForm(Cell cell, Runnable inputUpdate) {
		this.cell = cell;
		this.inputUpdate = inputUpdate;
		initComponents();
		this.value.setValue(0.0);
		value.addPropertyChangeListener("value", (PropertyChangeEvent evt) -> {
			this.checkbox.setSelected((double)evt.getNewValue() > 0.5);
			this.inputUpdate.run();
		});
		checkbox.addActionListener((ActionEvent evt) -> {
			if((double)this.value.getValue() < 0.5 && checkbox.isSelected()) {
				this.value.setValue(1.0);
			}
			if((double)this.value.getValue() > 0.5 && !checkbox.isSelected()) {
				this.value.setValue(0.0);
			}

		});
	}

	public double getValue() {
		return value.getValue() == null ? 0 : (double) value.getValue();
	}

	@Override
	public Dimension getPreferredSize() {
		Dimension dim = super.getPreferredSize();
		dim.width = Math.max(dim.width, 200);
		return dim;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        valueLabel = new javax.swing.JLabel();
        value = new javax.swing.JFormattedTextField();
        checkbox = new javax.swing.JCheckBox();

        setBorder(javax.swing.BorderFactory.createTitledBorder(cell.getSimpleName()));
        setMinimumSize(new java.awt.Dimension(200, 100));
        setName(""); // NOI18N
        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        valueLabel.setText("Value:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(valueLabel, gridBagConstraints);

        value.setFormatterFactory(new DoubleFormatterFactory());
        value.setText(DoubleFormatterFactory.INSTANCE_FORMATTER.valueToString(0.0)
        );
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(value, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(checkbox, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkbox;
    private javax.swing.JFormattedTextField value;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
